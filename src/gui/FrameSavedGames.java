/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import gamemap.loader.abstracts.AbstractMapLoader;
import models.SavedGamesTableModel;
import objects.MapInfo;
import objects.SavedMapInfo;
import utils.MessageManager;

import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author vojtech
 */
public class FrameSavedGames extends BaseChildFrame {
    private AbstractMapLoader mapLoader;
    private SavedGamesTableModel model;
    private FrameGame frameGame;
    private ArrayList<SavedMapInfo> list;

    /**
     * Creates new form FrameSavedGames
     */
    public FrameSavedGames(AbstractMapLoader mapLoader, FrameGame frameGame) {
        initComponents();
        this.mapLoader = mapLoader;
        this.frameGame = frameGame;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbtnDelete = new javax.swing.JButton();
        jbtnLoad = new javax.swing.JButton();
        jbtnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jbtnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jbtnDelete.setText("Удалить");
        jbtnDelete.setToolTipText("Удалить");
        jbtnDelete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jbtnDelete.setIconTextGap(10);
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        jbtnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/load_small.png"))); // NOI18N
        jbtnLoad.setText("Загрузить");
        jbtnLoad.setToolTipText("Загрузить сохраненную игру");
        jbtnLoad.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jbtnLoad.setIconTextGap(10);
        jbtnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLoadActionPerformed(evt);
            }
        });

        jbtnReturn.setText("<< в меню");
        jbtnReturn.setToolTipText("Вернуться в главное меню");
        jbtnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnDelete)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jbtnReturn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jbtnReturn, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnDelete)
                    .addComponent(jbtnLoad))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnReturnActionPerformed
        closeFrame();
    }//GEN-LAST:event_jbtnReturnActionPerformed

    private void jbtnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLoadActionPerformed
        int index = jTable1.getSelectedRow();
        
        if (index < 0) {
            return;
        }
        
        MapInfo mapInfo = model.getMapInfo(index);
        
        mapLoader.loadMap(mapInfo);
        
        closeFrame();
        
        frameGame.showFrame(getParentFrame());
    }//GEN-LAST:event_jbtnLoadActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        int index = jTable1.getSelectedRow();

        if (index < 0) {
            return;
        }

        int result = MessageManager.showYesNoMessage(this, "Подтверждаете удаление?");
        switch (result) {
            case JOptionPane.YES_OPTION: {

                MapInfo mapInfo = model.getMapInfo(index);

                mapLoader.deleteSavedMap(mapInfo);

                model.deleteMapInfo(index);
                model.refresh();

                break;
            }
            case JOptionPane.NO_OPTION:
            case JOptionPane.CANCEL_OPTION:

        }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnLoad;
    private javax.swing.JButton jbtnReturn;
    // End of variables declaration//GEN-END:variables

    @Override
    protected void showFrame(JFrame parent) {
        list = mapLoader.getSavedMapList(mapLoader.getGameMap().getMapInfo().getUser());

        model = new SavedGamesTableModel(list);

        jTable1.setModel(model);

        jTable1.setRowHeight(40);

        super.showFrame(parent);

        if (list.isEmpty()) {
            MessageManager.showErrorMessage(this, "Сохраненных игр не найдено!");
        }
    }
}
